#include <pitches.h>

int melody0[] = {
NOTE_C5,
NOTE_B4,
NOTE_AS4,
NOTE_A4,
NOTE_AS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_B3,
NOTE_C4,
NOTE_B3,
NOTE_AS3,
NOTE_A3,
NOTE_AS3,
NOTE_B3,
NOTE_C4,
NOTE_CS4,
NOTE_G4,
NOTE_E4,
NOTE_DS4,
NOTE_CS4,
NOTE_E4,
NOTE_DS4,
NOTE_CS4,
NOTE_G4,
NOTE_E4,
NOTE_DS4,
NOTE_CS4,
NOTE_E4,
NOTE_DS4,
NOTE_CS4,
NOTE_CS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_B3,
NOTE_C4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_GS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_GS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_GS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_GS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_D4,
NOTE_C4,
NOTE_D4,
NOTE_F4,
NOTE_E4,
NOTE_D4,
NOTE_F4,
NOTE_A4,
NOTE_G4,
NOTE_D4,
NOTE_C4,
NOTE_D4,
NOTE_F4,
NOTE_G4,
NOTE_A4,
NOTE_B4,
NOTE_C5,
NOTE_G5,
NOTE_C4,
NOTE_C4,
NOTE_D4,
NOTE_C4,
NOTE_CS4,
NOTE_CS4,
NOTE_F4,
NOTE_DS4,
NOTE_CS4,
NOTE_CS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_B3,
NOTE_C4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_GS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_GS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_GS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_G4,
NOTE_GS4,
NOTE_A4,
NOTE_GS4,
NOTE_G4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_FS4,
NOTE_D4,
NOTE_C4,
NOTE_D4,
NOTE_F4,
NOTE_E4,
NOTE_D4,
NOTE_F4,
NOTE_A4,
NOTE_G4,
NOTE_D4,
NOTE_C4,
NOTE_D4,
NOTE_F4,
NOTE_G4,
NOTE_A4,
NOTE_B4,
NOTE_C5,
NOTE_G5,
NOTE_C4,
NOTE_C4,
NOTE_D4,
NOTE_C4,
NOTE_CS4,
NOTE_CS4,
NOTE_F4,
NOTE_DS4,
NOTE_CS4,
NOTE_CS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_B3,
NOTE_C4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
NOTE_D4,
NOTE_DS4,
NOTE_E4,
NOTE_F4,
NOTE_E4,
NOTE_DS4,
NOTE_D4,
NOTE_CS4,
};

int start_time0[] = {
0.0,
78125.0,
156250.0,
234375.0,
312500.0,
390625.0,
468750.0,
546875.0,
625000.0,
703125.0,
781250.0,
859375.0,
937500.0,
1015625.0,
1093750.0,
1171875.0,
1250000.0,
1328125.0,
1406250.0,
1484375.0,
1562500.0,
1640625.0,
1718750.0,
1796875.0,
1875000.0,
1953125.0,
2031250.0,
2109375.0,
2187500.0,
2265625.0,
2343750.0,
2421875.0,
2500000.0,
2968750.0,
3437500.0,
4375000.0,
5468750.0,
5937500.0,
6718750.0,
7500000.0,
7968750.0,
8437500.0,
9375000.0,
10468750.0,
10937500.0,
11718750.0,
12500000.0,
12578125.0,
12656250.0,
12734375.0,
12812500.0,
12890625.0,
12968750.0,
13046875.0,
13125000.0,
13203125.0,
13281250.0,
13359375.0,
13437500.0,
13515625.0,
13593750.0,
13671875.0,
13750000.0,
13828125.0,
13906250.0,
13984375.0,
14062500.0,
14140625.0,
14218750.0,
14296875.0,
14375000.0,
14453125.0,
14531250.0,
14609375.0,
14687500.0,
14765625.0,
14843750.0,
14921875.0,
15000000.0,
15078125.0,
15156250.0,
15234375.0,
15312500.0,
15390625.0,
15468750.0,
15546875.0,
15625000.0,
15703125.0,
15781250.0,
15859375.0,
15937500.0,
16015625.0,
16093750.0,
16171875.0,
16250000.0,
16328125.0,
16406250.0,
16484375.0,
16562500.0,
16640625.0,
16718750.0,
16796875.0,
16875000.0,
16953125.0,
17031250.0,
17109375.0,
17187500.0,
17265625.0,
17343750.0,
17421875.0,
17500000.0,
17578125.0,
17656250.0,
17734375.0,
17812500.0,
17890625.0,
17968750.0,
18046875.0,
18125000.0,
18203125.0,
18281250.0,
18359375.0,
18437500.0,
18515625.0,
18593750.0,
18671875.0,
18750000.0,
18828125.0,
18906250.0,
18984375.0,
19062500.0,
19140625.0,
19218750.0,
19296875.0,
19375000.0,
19453125.0,
19531250.0,
19609375.0,
19687500.0,
19765625.0,
19843750.0,
19921875.0,
20000000.0,
20078125.0,
20156250.0,
20234375.0,
20312500.0,
20390625.0,
20468750.0,
20546875.0,
20625000.0,
20703125.0,
20781250.0,
20859375.0,
20937500.0,
21015625.0,
21093750.0,
21171875.0,
21250000.0,
21328125.0,
21406250.0,
21484375.0,
21562500.0,
21640625.0,
21718750.0,
21796875.0,
21875000.0,
21953125.0,
22031250.0,
22109375.0,
22187500.0,
22265625.0,
22343750.0,
22421875.0,
22500000.0,
22578125.0,
22656250.0,
22734375.0,
22812500.0,
22890625.0,
22968750.0,
23046875.0,
23125000.0,
23203125.0,
23281250.0,
23359375.0,
23437500.0,
23515625.0,
23593750.0,
23671875.0,
23750000.0,
23828125.0,
23906250.0,
23984375.0,
24062500.0,
24140625.0,
24218750.0,
24296875.0,
24375000.0,
24453125.0,
24531250.0,
24609375.0,
24687500.0,
24765625.0,
24843750.0,
24921875.0,
25000000.0,
25078125.0,
25156250.0,
25234375.0,
25312500.0,
25390625.0,
25468750.0,
25546875.0,
25625000.0,
25703125.0,
25781250.0,
25859375.0,
25937500.0,
26015625.0,
26093750.0,
26171875.0,
26250000.0,
26328125.0,
26406250.0,
26484375.0,
26562500.0,
26640625.0,
26718750.0,
26796875.0,
26875000.0,
26953125.0,
27031250.0,
27109375.0,
27187500.0,
27265625.0,
27343750.0,
27421875.0,
27500000.0,
27812500.0,
28125000.0,
28437500.0,
28750000.0,
29218750.0,
29687500.0,
30000000.0,
31250000.0,
32500000.0,
32812500.0,
33125000.0,
33437500.0,
33750000.0,
34218750.0,
34687500.0,
35000000.0,
36250000.0,
37500000.0,
38437500.0,
38750000.0,
38906250.0,
40000000.0,
40937500.0,
41250000.0,
41406250.0,
41875000.0,
42500000.0,
42578125.0,
42656250.0,
42734375.0,
42812500.0,
42890625.0,
42968750.0,
43046875.0,
43125000.0,
43203125.0,
43281250.0,
43359375.0,
43437500.0,
43515625.0,
43593750.0,
43671875.0,
43750000.0,
43828125.0,
43906250.0,
43984375.0,
44062500.0,
44140625.0,
44218750.0,
44296875.0,
44375000.0,
44453125.0,
44531250.0,
44609375.0,
44687500.0,
44765625.0,
44843750.0,
44921875.0,
45000000.0,
45078125.0,
45156250.0,
45234375.0,
45312500.0,
45390625.0,
45468750.0,
45546875.0,
45625000.0,
45703125.0,
45781250.0,
45859375.0,
45937500.0,
46015625.0,
46093750.0,
46171875.0,
46250000.0,
46328125.0,
46406250.0,
46484375.0,
46562500.0,
46640625.0,
46718750.0,
46796875.0,
46875000.0,
46953125.0,
47031250.0,
47109375.0,
47187500.0,
47265625.0,
47343750.0,
47421875.0,
47500000.0,
47578125.0,
47656250.0,
47734375.0,
47812500.0,
47890625.0,
47968750.0,
48046875.0,
48125000.0,
48203125.0,
48281250.0,
48359375.0,
48437500.0,
48515625.0,
48593750.0,
48671875.0,
48750000.0,
48828125.0,
48906250.0,
48984375.0,
49062500.0,
49140625.0,
49218750.0,
49296875.0,
49375000.0,
49453125.0,
49531250.0,
49609375.0,
49687500.0,
49765625.0,
49843750.0,
49921875.0,
50000000.0,
50078125.0,
50156250.0,
50234375.0,
50312500.0,
50390625.0,
50468750.0,
50546875.0,
50625000.0,
50703125.0,
50781250.0,
50859375.0,
50937500.0,
51015625.0,
51093750.0,
51171875.0,
51250000.0,
51328125.0,
51406250.0,
51484375.0,
51562500.0,
51640625.0,
51718750.0,
51796875.0,
51875000.0,
51953125.0,
52031250.0,
52109375.0,
52187500.0,
52265625.0,
52343750.0,
52421875.0,
52500000.0,
52578125.0,
52656250.0,
52734375.0,
52812500.0,
52890625.0,
52968750.0,
53046875.0,
53125000.0,
53203125.0,
53281250.0,
53359375.0,
53437500.0,
53515625.0,
53593750.0,
53671875.0,
53750000.0,
53828125.0,
53906250.0,
53984375.0,
54062500.0,
54140625.0,
54218750.0,
54296875.0,
54375000.0,
54453125.0,
54531250.0,
54609375.0,
54687500.0,
54765625.0,
54843750.0,
54921875.0,
55000000.0,
55078125.0,
55156250.0,
55234375.0,
55312500.0,
55390625.0,
55468750.0,
55546875.0,
55625000.0,
55703125.0,
55781250.0,
55859375.0,
55937500.0,
56015625.0,
56093750.0,
56171875.0,
56250000.0,
56328125.0,
56406250.0,
56484375.0,
56562500.0,
56640625.0,
56718750.0,
56796875.0,
56875000.0,
56953125.0,
57031250.0,
57109375.0,
57187500.0,
57265625.0,
57343750.0,
57421875.0,
57500000.0,
57812500.0,
58125000.0,
58437500.0,
58750000.0,
59218750.0,
59687500.0,
60000000.0,
61250000.0,
62500000.0,
62812500.0,
63125000.0,
63437500.0,
63750000.0,
64218750.0,
64687500.0,
65000000.0,
66250000.0,
67500000.0,
68437500.0,
68750000.0,
68906250.0,
70000000.0,
70937500.0,
71250000.0,
71406250.0,
71875000.0,
72500000.0,
72578125.0,
72656250.0,
72734375.0,
72812500.0,
72890625.0,
72968750.0,
73046875.0,
73125000.0,
73203125.0,
73281250.0,
73359375.0,
73437500.0,
73515625.0,
73593750.0,
73671875.0,
73750000.0,
73828125.0,
73906250.0,
73984375.0,
74062500.0,
74140625.0,
74218750.0,
74296875.0,
74375000.0,
74453125.0,
74531250.0,
74609375.0,
74687500.0,
74765625.0,
74843750.0,
74921875.0,
};

int duration0[] = {
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
781250.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
312500.0,
312500.0,
312500.0,
312500.0,
468750.0,
468750.0,
312500.0,
1250000.0,
1250000.0,
312500.0,
312500.0,
312500.0,
312500.0,
468750.0,
468750.0,
312500.0,
1250000.0,
1250000.0,
937500.0,
156250.0,
156250.0,
156250.0,
937500.0,
156250.0,
156250.0,
312500.0,
625000.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
312500.0,
312500.0,
312500.0,
312500.0,
468750.0,
468750.0,
312500.0,
1250000.0,
1250000.0,
312500.0,
312500.0,
312500.0,
312500.0,
468750.0,
468750.0,
312500.0,
1250000.0,
1250000.0,
937500.0,
156250.0,
156250.0,
156250.0,
937500.0,
156250.0,
156250.0,
312500.0,
625000.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
};

int melody1[] = {
NOTE_G5,
NOTE_FS5,
NOTE_F5,
NOTE_G6,
NOTE_G5,
NOTE_FS5,
NOTE_F5,
NOTE_G6,
NOTE_G5,
NOTE_FS5,
NOTE_F5,
NOTE_G6,
NOTE_G5,
NOTE_FS5,
NOTE_F5,
NOTE_G6,
NOTE_G5,
NOTE_FS5,
NOTE_F5,
NOTE_G6,
NOTE_G5,
NOTE_FS5,
NOTE_F5,
NOTE_G6,
NOTE_G5,
NOTE_FS5,
NOTE_F5,
NOTE_G6,
NOTE_G5,
NOTE_FS5,
NOTE_F5,
NOTE_G6,
NOTE_G5,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_FS4,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_G4,
NOTE_FS4,
NOTE_E4,
NOTE_G4,
NOTE_A4,
NOTE_G4,
NOTE_GS5,
NOTE_G5,
NOTE_GS5,
NOTE_G5,
NOTE_CS6,
NOTE_C5,
NOTE_AS4,
NOTE_GS4,
NOTE_CS5,
NOTE_C5,
NOTE_AS4,
NOTE_F5,
NOTE_E5,
NOTE_D5,
NOTE_AS4,
NOTE_C5,
NOTE_D5,
NOTE_F5,
NOTE_GS5,
NOTE_G5,
NOTE_F4,
NOTE_AS4,
NOTE_D5,
NOTE_F5,
NOTE_E5,
NOTE_F4,
NOTE_AS4,
NOTE_D5,
NOTE_F5,
NOTE_G5,
NOTE_C6,
NOTE_E5,
NOTE_E5,
NOTE_F5,
NOTE_E5,
NOTE_F5,
NOTE_F5,
NOTE_GS5,
NOTE_G5,
NOTE_F5,
NOTE_G5,
NOTE_FS5,
NOTE_E5,
NOTE_G5,
NOTE_A5,
NOTE_G5,
NOTE_GS5,
NOTE_G5,
NOTE_GS5,
NOTE_G5,
NOTE_CS6,
NOTE_C5,
NOTE_AS4,
NOTE_GS4,
NOTE_CS5,
NOTE_C5,
NOTE_AS4,
NOTE_F5,
NOTE_E5,
NOTE_D5,
NOTE_AS4,
NOTE_C5,
NOTE_D5,
NOTE_F5,
NOTE_GS5,
NOTE_G5,
NOTE_F4,
NOTE_AS4,
NOTE_D5,
NOTE_F5,
NOTE_E5,
NOTE_F4,
NOTE_AS4,
NOTE_D5,
NOTE_F5,
NOTE_G5,
NOTE_C6,
NOTE_E5,
NOTE_E5,
NOTE_F5,
NOTE_E5,
NOTE_F5,
NOTE_F5,
NOTE_GS5,
NOTE_G5,
NOTE_F5,
NOTE_G5,
NOTE_FS5,
NOTE_E5,
NOTE_G5,
NOTE_A5,
NOTE_G5,
};

int start_time1[] = {
0.0,
78125.0,
156250.0,
234375.0,
312500.0,
390625.0,
468750.0,
546875.0,
625000.0,
703125.0,
781250.0,
859375.0,
937500.0,
1015625.0,
1093750.0,
1171875.0,
1250000.0,
1328125.0,
1406250.0,
1484375.0,
1562500.0,
1640625.0,
1718750.0,
1796875.0,
1875000.0,
1953125.0,
2031250.0,
2109375.0,
2187500.0,
2265625.0,
2343750.0,
2421875.0,
2500000.0,
2968750.0,
3437500.0,
4375000.0,
5468750.0,
5937500.0,
6718750.0,
7500000.0,
7968750.0,
8437500.0,
9375000.0,
10468750.0,
10937500.0,
11718750.0,
12500000.0,
12968750.0,
13437500.0,
13750000.0,
14218750.0,
14687500.0,
15000000.0,
15937500.0,
16250000.0,
16406250.0,
16875000.0,
17500000.0,
17968750.0,
18437500.0,
18750000.0,
19218750.0,
19687500.0,
20000000.0,
20468750.0,
20937500.0,
21250000.0,
21562500.0,
21875000.0,
22187500.0,
22500000.0,
25000000.0,
27500000.0,
28125000.0,
28750000.0,
29375000.0,
30000000.0,
32500000.0,
33125000.0,
33750000.0,
34375000.0,
35000000.0,
36250000.0,
37500000.0,
38437500.0,
38750000.0,
38906250.0,
40000000.0,
40937500.0,
41250000.0,
41406250.0,
41875000.0,
42500000.0,
42968750.0,
43437500.0,
43750000.0,
44218750.0,
44687500.0,
45000000.0,
45937500.0,
46250000.0,
46406250.0,
46875000.0,
47500000.0,
47968750.0,
48437500.0,
48750000.0,
49218750.0,
49687500.0,
50000000.0,
50468750.0,
50937500.0,
51250000.0,
51562500.0,
51875000.0,
52187500.0,
52500000.0,
55000000.0,
57500000.0,
58125000.0,
58750000.0,
59375000.0,
60000000.0,
62500000.0,
63125000.0,
63750000.0,
64375000.0,
65000000.0,
66250000.0,
67500000.0,
68437500.0,
68750000.0,
68906250.0,
70000000.0,
70937500.0,
71250000.0,
71406250.0,
71875000.0,
72500000.0,
72968750.0,
73437500.0,
73750000.0,
74218750.0,
74687500.0,
};

int duration1[] = {
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
312500.0,
312500.0,
312500.0,
312500.0,
312500.0,
312500.0,
781250.0,
312500.0,
312500.0,
312500.0,
312500.0,
312500.0,
312500.0,
312500.0,
468750.0,
468750.0,
312500.0,
468750.0,
468750.0,
312500.0,
937500.0,
156250.0,
156250.0,
156250.0,
625000.0,
468750.0,
468750.0,
312500.0,
468750.0,
468750.0,
312500.0,
468750.0,
468750.0,
312500.0,
312500.0,
312500.0,
312500.0,
312500.0,
2500000.0,
2500000.0,
625000.0,
625000.0,
625000.0,
625000.0,
2500000.0,
625000.0,
625000.0,
625000.0,
625000.0,
1250000.0,
1250000.0,
937500.0,
156250.0,
156250.0,
156250.0,
937500.0,
156250.0,
156250.0,
312500.0,
625000.0,
468750.0,
468750.0,
312500.0,
468750.0,
468750.0,
312500.0,
937500.0,
156250.0,
156250.0,
156250.0,
625000.0,
468750.0,
468750.0,
312500.0,
468750.0,
468750.0,
312500.0,
468750.0,
468750.0,
312500.0,
312500.0,
312500.0,
312500.0,
312500.0,
2500000.0,
2500000.0,
625000.0,
625000.0,
625000.0,
625000.0,
2500000.0,
625000.0,
625000.0,
625000.0,
625000.0,
1250000.0,
1250000.0,
937500.0,
156250.0,
156250.0,
156250.0,
937500.0,
156250.0,
156250.0,
312500.0,
625000.0,
468750.0,
468750.0,
312500.0,
468750.0,
468750.0,
312500.0,
};

int melody2[] = {
NOTE_CS4,
NOTE_CS4,
NOTE_C4,
NOTE_D4,
NOTE_D4,
NOTE_C4,
NOTE_DS4,
NOTE_DS4,
NOTE_C4,
NOTE_E4,
NOTE_E4,
NOTE_C4,
NOTE_F4,
NOTE_F4,
NOTE_C4,
NOTE_FS4,
NOTE_FS4,
NOTE_C4,
NOTE_G4,
NOTE_G4,
NOTE_C4,
NOTE_AS3,
NOTE_B3,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_CS4,
NOTE_GS4,
NOTE_AS4,
NOTE_GS4,
NOTE_G4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_CS4,
NOTE_GS4,
NOTE_AS4,
NOTE_GS4,
NOTE_F4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_CS4,
NOTE_GS4,
NOTE_AS4,
NOTE_GS4,
NOTE_G4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_CS4,
NOTE_GS4,
NOTE_AS4,
NOTE_GS4,
NOTE_F4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_GS4,
NOTE_G4,
NOTE_GS4,
NOTE_G4,
NOTE_F4,
NOTE_E4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_GS4,
NOTE_G4,
NOTE_GS4,
NOTE_G4,
NOTE_F4,
NOTE_E4,
NOTE_D4,
NOTE_CS4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_AS3,
NOTE_F4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_F4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_CS4,
NOTE_GS4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
NOTE_C4,
NOTE_G4,
};

int start_time2[] = {
0.0,
156250.0,
234375.0,
312500.0,
468750.0,
546875.0,
625000.0,
781250.0,
859375.0,
937500.0,
1093750.0,
1171875.0,
1250000.0,
1406250.0,
1484375.0,
1562500.0,
1718750.0,
1796875.0,
1875000.0,
2031250.0,
2109375.0,
2187500.0,
2343750.0,
2500000.0,
2656250.0,
2812500.0,
2968750.0,
3125000.0,
3281250.0,
3437500.0,
3593750.0,
3750000.0,
3906250.0,
4062500.0,
4218750.0,
4375000.0,
4531250.0,
4687500.0,
4843750.0,
5000000.0,
5156250.0,
5312500.0,
5468750.0,
5625000.0,
5781250.0,
5937500.0,
6093750.0,
6250000.0,
6406250.0,
6562500.0,
6718750.0,
6875000.0,
7031250.0,
7187500.0,
7343750.0,
7500000.0,
7656250.0,
7812500.0,
7968750.0,
8125000.0,
8281250.0,
8437500.0,
8593750.0,
8750000.0,
8906250.0,
9062500.0,
9218750.0,
9375000.0,
9531250.0,
9687500.0,
9843750.0,
10000000.0,
10156250.0,
10312500.0,
10468750.0,
10625000.0,
10781250.0,
10937500.0,
11093750.0,
11250000.0,
11406250.0,
11562500.0,
11718750.0,
11875000.0,
12031250.0,
12187500.0,
12343750.0,
12500000.0,
12656250.0,
12812500.0,
12968750.0,
13125000.0,
13281250.0,
13437500.0,
13593750.0,
13750000.0,
13906250.0,
14062500.0,
14218750.0,
14375000.0,
14531250.0,
14687500.0,
14843750.0,
15000000.0,
15937500.0,
16250000.0,
16406250.0,
16875000.0,
17031250.0,
17187500.0,
17343750.0,
17500000.0,
17656250.0,
17812500.0,
17968750.0,
18125000.0,
18281250.0,
18437500.0,
18593750.0,
18750000.0,
18906250.0,
19062500.0,
19218750.0,
19375000.0,
19531250.0,
19687500.0,
19843750.0,
20000000.0,
20156250.0,
20312500.0,
20468750.0,
20625000.0,
20781250.0,
20937500.0,
21093750.0,
21250000.0,
21406250.0,
21562500.0,
21718750.0,
21875000.0,
22031250.0,
22187500.0,
22343750.0,
22500000.0,
22656250.0,
22812500.0,
22968750.0,
23125000.0,
23281250.0,
23437500.0,
23593750.0,
23750000.0,
23906250.0,
24062500.0,
24218750.0,
24375000.0,
24531250.0,
24687500.0,
24843750.0,
25000000.0,
25156250.0,
25312500.0,
25468750.0,
25625000.0,
25781250.0,
25937500.0,
26093750.0,
26250000.0,
26406250.0,
26562500.0,
26718750.0,
26875000.0,
27031250.0,
27187500.0,
27343750.0,
27500000.0,
27656250.0,
27812500.0,
27968750.0,
28125000.0,
28281250.0,
28437500.0,
28593750.0,
28750000.0,
28906250.0,
29062500.0,
29218750.0,
29375000.0,
29531250.0,
29687500.0,
29843750.0,
30000000.0,
30156250.0,
30312500.0,
30468750.0,
30625000.0,
30781250.0,
30937500.0,
31093750.0,
31250000.0,
31406250.0,
31562500.0,
31718750.0,
31875000.0,
32031250.0,
32187500.0,
32343750.0,
32500000.0,
32656250.0,
32812500.0,
32968750.0,
33125000.0,
33281250.0,
33437500.0,
33593750.0,
33750000.0,
33906250.0,
34062500.0,
34218750.0,
34375000.0,
34531250.0,
34687500.0,
34843750.0,
35000000.0,
35156250.0,
35312500.0,
35468750.0,
35625000.0,
35781250.0,
35937500.0,
36093750.0,
36250000.0,
36406250.0,
36562500.0,
36718750.0,
36875000.0,
37031250.0,
37187500.0,
37343750.0,
37500000.0,
37656250.0,
37812500.0,
37968750.0,
38125000.0,
38281250.0,
38437500.0,
38593750.0,
38750000.0,
38906250.0,
39062500.0,
39218750.0,
39375000.0,
39531250.0,
39687500.0,
39843750.0,
40000000.0,
40156250.0,
40312500.0,
40468750.0,
40625000.0,
40781250.0,
40937500.0,
41093750.0,
41250000.0,
41406250.0,
41562500.0,
41718750.0,
41875000.0,
42031250.0,
42187500.0,
42343750.0,
42500000.0,
42656250.0,
42812500.0,
42968750.0,
43125000.0,
43281250.0,
43437500.0,
43593750.0,
43750000.0,
43906250.0,
44062500.0,
44218750.0,
44375000.0,
44531250.0,
44687500.0,
44843750.0,
45000000.0,
45937500.0,
46250000.0,
46406250.0,
46875000.0,
47031250.0,
47187500.0,
47343750.0,
47500000.0,
47656250.0,
47812500.0,
47968750.0,
48125000.0,
48281250.0,
48437500.0,
48593750.0,
48750000.0,
48906250.0,
49062500.0,
49218750.0,
49375000.0,
49531250.0,
49687500.0,
49843750.0,
50000000.0,
50156250.0,
50312500.0,
50468750.0,
50625000.0,
50781250.0,
50937500.0,
51093750.0,
51250000.0,
51406250.0,
51562500.0,
51718750.0,
51875000.0,
52031250.0,
52187500.0,
52343750.0,
52500000.0,
52656250.0,
52812500.0,
52968750.0,
53125000.0,
53281250.0,
53437500.0,
53593750.0,
53750000.0,
53906250.0,
54062500.0,
54218750.0,
54375000.0,
54531250.0,
54687500.0,
54843750.0,
55000000.0,
55156250.0,
55312500.0,
55468750.0,
55625000.0,
55781250.0,
55937500.0,
56093750.0,
56250000.0,
56406250.0,
56562500.0,
56718750.0,
56875000.0,
57031250.0,
57187500.0,
57343750.0,
57500000.0,
57656250.0,
57812500.0,
57968750.0,
58125000.0,
58281250.0,
58437500.0,
58593750.0,
58750000.0,
58906250.0,
59062500.0,
59218750.0,
59375000.0,
59531250.0,
59687500.0,
59843750.0,
60000000.0,
60156250.0,
60312500.0,
60468750.0,
60625000.0,
60781250.0,
60937500.0,
61093750.0,
61250000.0,
61406250.0,
61562500.0,
61718750.0,
61875000.0,
62031250.0,
62187500.0,
62343750.0,
62500000.0,
62656250.0,
62812500.0,
62968750.0,
63125000.0,
63281250.0,
63437500.0,
63593750.0,
63750000.0,
63906250.0,
64062500.0,
64218750.0,
64375000.0,
64531250.0,
64687500.0,
64843750.0,
65000000.0,
65156250.0,
65312500.0,
65468750.0,
65625000.0,
65781250.0,
65937500.0,
66093750.0,
66250000.0,
66406250.0,
66562500.0,
66718750.0,
66875000.0,
67031250.0,
67187500.0,
67343750.0,
67500000.0,
67656250.0,
67812500.0,
67968750.0,
68125000.0,
68281250.0,
68437500.0,
68593750.0,
68750000.0,
68906250.0,
69062500.0,
69218750.0,
69375000.0,
69531250.0,
69687500.0,
69843750.0,
70000000.0,
70156250.0,
70312500.0,
70468750.0,
70625000.0,
70781250.0,
70937500.0,
71093750.0,
71250000.0,
71406250.0,
71562500.0,
71718750.0,
71875000.0,
72031250.0,
72187500.0,
72343750.0,
72500000.0,
72656250.0,
72812500.0,
72968750.0,
73125000.0,
73281250.0,
73437500.0,
73593750.0,
73750000.0,
73906250.0,
74062500.0,
74218750.0,
74375000.0,
74531250.0,
74687500.0,
74843750.0,
};

int duration2[] = {
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
78125.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
937500.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
937500.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
156250.0,
};



int main_cycle_usec = 10;
int master_time = 0;

int notepin0 = 3;
int notepin2 = 5;
int notepin1 = 25;

int elapsed0 = 0;
int elapsed1 = 0;
int elapsed2 = 0;

int state0 = 0;
int state1 = 0;
int state2 = 0;

void setup() {
  Serial.begin(9600);
  pinMode(13, OUTPUT);
  pinMode(notepin0, OUTPUT);
  pinMode(notepin1, OUTPUT);
  pinMode(notepin2, OUTPUT);

  digitalWrite(13, HIGH);
  delay(500);
  digitalWrite(13, LOW);
  delay(500);
  digitalWrite(13, HIGH);
  delay(500);
  digitalWrite(13, LOW);
  delay(500);
//  tone(3, 40);
//  tone(9, 440);
  
}

float current_time;

int size0 = sizeof(melody0)/sizeof(melody0[0]);
int size1 = sizeof(melody1)/sizeof(melody1[0]);
int size2 = sizeof(melody2)/sizeof(melody2[0]);


void loop() {
  Serial.println(size0);
  Serial.println(size1);
  Serial.println(size2);
  
  int usec2 = 0;//(1000000/freq2)/2;

  int end0 = 0;
  int end1 = 0;
  int end2 = 0;

  int i = -1;
  int j = -1;
  int k = -1;
    
  int note0_active = 0;
  float note0_start = 0;
  float note0_end = micros();
  float wait_time0 = 0;
  
  int note1_active = 0;
  float note1_start = 0;
  float note1_end = micros();
  float wait_time1 = 0;
  
  int note2_active = 0;
  float note2_start = 0;
  float note2_end = micros();
  float wait_time2 = 0;

  float start_time = micros();

  while(1){

    current_time = micros();


    // ### VOICE 0 ### //
        
    if (!note0_active){
      // Check if voice is already done, do nothing if True
      if (end0){
        i;
      }
      // Check if note needs to start
      else if ((current_time - note0_end) >= wait_time0){
        i++;
//        Serial.print("I: ");
//        Serial.println(i);
        note0_active = 1;
        analogWriteFrequency(notepin0, melody0[i]);
        analogWrite(notepin0, 128);
        note0_start = micros();
      }
    }
    else{
      // Check if note needs to end      
      if ((current_time - note0_start) >= duration0[i]){
        note0_active = 0;
        analogWrite(notepin0, 0);

        // Check if already at song end
        if (i+1 == size0){
//          Serial.println("END0");
          end0 = 1;
        }
        else{
          note0_end = micros();
          wait_time0 = start_time0[i+1] - (start_time0[i] + duration0[i]); // consider hardcoding this to reduce cycle time
        }
      }  
    }



    // ### VOICE 1 ### //
    
    if (!note1_active){
      // Check if voice is already done, do nothing if True
      if (end1){
        j;
      }
      // Check if note needs to start
      else if ((current_time - note1_end) >= wait_time1){
        j++;
//        Serial.print("J: ");
//        Serial.println(j);
        note1_active = 1;
        analogWriteFrequency(notepin1, melody1[j]);
        analogWrite(notepin1, 128);
        note1_start = micros();
      }
    }
    else{
      // Check if note needs to end      
      if ((current_time - note1_start) >= duration1[j]){
        note1_active = 0;
        analogWrite(notepin1, 0);

        // Check if already at song end
        if (j+1 == size1){
//          Serial.println("END1");
          end1 = 1;
        }
        else{
          note1_end = micros();
          wait_time1 = start_time1[j+1] - (start_time1[j] + duration1[j]); // consider hardcoding this to reduce cycle time
        }
      }
    }


    // ### VOICE 2 ### //

    if (!note2_active){
      // Check if voice is already done, do nothing if True
      if (end2){
        k;
      }
      // Check if note needs to start
      else if ((current_time - note2_end) >= wait_time2){
        k++;
//        Serial.print("k: ");
//        Serial.println(k);
        note2_active = 1;
        analogWriteFrequency(notepin2, melody2[k]);
        analogWrite(notepin2, 128);
        note2_start = micros();
      }
    }
    else{
      // Check if note needs to end      
      if ((current_time - note2_start) >= duration2[k]){
        note2_active = 0;
        analogWrite(notepin2, 0);

        // Check if already at song end
        if (k+1 == size2){
//          Serial.println("END2");
          end2 = 1;
        }
        else{
          note2_end = micros();
          wait_time2 = start_time2[k+1] - (start_time2[k] + duration2[k]); // consider hardcoding this to reduce cycle time
        }
      }
    }
//
//    if (!note2_active){
//      // Check if voice is already done, do nothing if True
//      if (end2){
//        k;
//      }
//      // Check if note needs to start
//      else if ((current_time - note2_end) >= wait_time2){
//        k++;
////        Serial.print("K: ");
////        Serial.println(k);
//        note2_active = 1;
//        digitalWrite(notepin2, HIGH);
//        elapsed2 = 0;
//        note2_start = micros();
//        usec2 = (1000000/melody2[k])/2;
//      }
//    }
//    else{
//      // Check if note needs to end      
//      if ((current_time - note2_start) >= duration2[k]){
//        note2_active = 0;
//        digitalWrite(notepin2, LOW);
//
//        // Check if already at song end
//        if (k+1 == size2){
////          Serial.println("END2");
//          end2 = 1;
//        }
//        else{
//          note2_end = micros();
//          wait_time2 = start_time2[k+1] - (start_time2[k] + duration2[k]); // consider hardcoding this to reduce cycle time
//        }
//      }

//      // If didn't end, check proper note state and set if needed
//      if (elapsed2 > usec2){
//        state2 = !state2;
//        digitalWrite(notepin2, state2);
//        elapsed2 = 0;
//      }      
//    }

    // If all voices are finished, break out of while loop and play song again
    if (end0 & end1 & end2){
      break;
    }

//    elapsed2 += main_cycle_usec;
    delayMicroseconds(main_cycle_usec);
  }

  digitalWrite(13, HIGH);
  delay(500);
  digitalWrite(13, LOW);
  delay(500);
  digitalWrite(13, HIGH);
  delay(500);
  digitalWrite(13, LOW);
  delay(500);
}
